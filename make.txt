# Makefile for UNIX        

# the compiler: gcc for C program, define as g++ for C++ 
CC = gcc

# the static library archiver 
AR = ar rcs  

# compiler flags: 
# -g enable debugging 
# -Wall turn on all warnings 
# -D__USE_FIXED_PROTOTYPES__  force the compiler to use the correct headers 
# -ansi donâ€™t use GNU extensions, stick to ANSI
# -std=c99 use newer version
CFLAGS=-g -Wall -D__USE_FIXED_PROTOTYPES__ -std=c99 

# libraries 
# custom 
NETWORKING_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/networking/libnetworking.a
COMPARERS_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/comparers/libcomparers.a
UNIT_TESTS_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/unit_tests/libunit_tests.a

# the build target executable: 
TARGET = client
LIBRARY = librc_client.a

# source files 
SOURCE_FILES = conn_socket.o connection.o datagram_conn.o service.o stream_conn.o client.o

# test source files 
TEST_SOURCE_FILES = test_client.o

all: $(TARGET)

$(TARGET): main.c $(LIBRARY) $(TEST_SOURCE_FILES)	
	$(CC) $(CFLAGS) -o $(TARGET) main.c $(LIBRARY) $(NETWORKING_LIBRARY) $(COMPARERS_LIBRARY) $(TEST_SOURCE_FILES) $(UNIT_TESTS_LIBRARY) 

$(LIBRARY): $(SOURCE_FILES) 
	$(AR) $(LIBRARY) $(SOURCE_FILES)

conn_socket.o: networking/conn_socket.c networking/conn_socket.h
	$(CC) $(CFLAGS) -c networking/conn_socket.c

connection.o: networking/connection.c networking/connection.h
	$(CC) $(CFLAGS) -c networking/connection.c

datagram_conn.o: networking/datagram_conn.c networking/datagram_conn.h
	$(CC) $(CFLAGS) -c networking/datagram_conn.c

service.o: networking/service.c networking/service.h
	$(CC) $(CFLAGS) -c networking/service.c

stream_conn.o: networking/stream_conn.c networking/stream_conn.h
	$(CC) $(CFLAGS) -c networking/stream_conn.c

client.o: client.c client.h
	$(CC) $(CFLAGS) -c client.c

test_client.o: test/test_client.c test/test_client.h
	$(CC) $(CFLAGS) -c test/test_client.c

clean:
	$(RM) $(TARGET) $(LIBRARY) $(SOURCE_FILES) $(TEST_SOURCE_FILES)